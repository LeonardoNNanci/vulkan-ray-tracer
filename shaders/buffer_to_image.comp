#version 460
#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_shader_image_load_formatted : enable
#extension GL_EXT_debug_printf : enable

layout(set = 0, binding = 1) uniform image2D inImage0;
layout(set = 0, binding = 7) buffer _buf0 { float buff0[]; };

#define GRID_SIZE 16
layout(local_size_x = GRID_SIZE, local_size_y = GRID_SIZE) in;


void main()
{
  ivec2 imgSize = imageSize(inImage0);
  ivec2 coord   = ivec2(gl_GlobalInvocationID.xy);
  if(coord.x >= imgSize.x || coord.y >= imgSize.y)  // Check limits
    return;

  uint linear = coord.y * imgSize.x * 3 + coord.x * 3;

  vec4 rgbPixel;
  rgbPixel.r = buff0[linear];
  rgbPixel.g = buff0[linear + 1];
  rgbPixel.b = buff0[linear + 2];
  rgbPixel.a = 1.;

  imageStore(inImage0, coord, rgbPixel);
}